#+title: Final Report: Boo-Bot
# #+author: Devin Pohl
# #+author: Daniel Garcia
#+date: 4/30/2021
#+description: Project is done, time to get our grade and get out

* Org Preamble                                                       :ignore:
** Org Options                                                      :ignore:
# Do not export table of contents
# Use smart quotes
# Do not export TODO/progress tracking
#+options: toc:nil ':t todo:nil

** Tangle Hacks                                                     :ignore:
# This document needs some auto tangling

#+NAME: tangle-it
#+BEGIN_SRC emacs-lisp :exports none
  (org-babel-tangle)
#+END_SRC
#+BEGIN_SRC text :results silent :noweb yes :exports results
  <<tangle-it()>>
#+END_SRC

** Latex Class + IEEE Compliance                                    :ignore:
# https://github.com/Shizcow/dotfiles/blob/master/emacs/conf.org#general-config
#+latex_class: IEEE
#+latex_class_options: [10pt, final, conference]

*** Author + Affiliations                                          :ignore:
# IEEEtrans requires some special attention to author formatting to get affiliations right
# Need to drop down to latex AND get this into header so this needs a little bit
#   of babel magic. Auto tangle managed by [[Tangle Hacks]] section

#+latex_header: \usepackage{authorhacks}

#+name: authorhacks
#+begin_src latex :tangle authorhacks.sty :exports none
\author{\IEEEauthorblockN{Devin Pohl}
  \IEEEauthorblockA{
    Department of Electrical and Computer Engineering\\
    Colorado State University\\
    Email: \href{mailto:Devin.Pohl@colostate.edu}{Devin.Pohl@colostate.edu}}
  \and
  \IEEEauthorblockN{Daniel Garcia}
  \IEEEauthorblockA{
    Department of Computer Science\\
    Colorado State University\\
    Email: \href{mailto:daniel95@rams.colostate.edu}{daniel95@rams.colostate.edu}}}
#+end_src

*** MISC Latex Formatting                                          :ignore:
**** Fix Formatting for Long Links in References                  :ignore:
#+LaTeX_HEADER: \def\UrlBreaks{\do\/\do-}

**** Tables                                                       :ignore:
# Provides a P{width} tabular environment
#+LaTeX_HEADER: \usepackage{array}
#+LaTeX_HEADER: \newcolumntype{P}[1]{>{\centering\arraybackslash}p{#1}}


* General Notes                                                      :ignore:
#+begin_comment
The final report that you will submit will be a complete documentation of your project. In addition, the
code developed will also need to be submitted.
This report should be between 1500-2500 words excluding references. The report must include several
elements, each of which will be a separate section. These are already outlined in this document.
#+end_comment

* DONE Abstract                                                      :ignore:
#+begin_comment
Compact one-paragraph overview of the project
#+end_comment

# this block generates the correct formatting, hence the :ignore:
#+begin_abstract
This project presents a small, remote controlled robot.
This robot, nicknamed the "Boo-Bot" by the authors, is capable of sending real-time video/audio and taking real-time controls over the internet, allowing it to be controlled from anywhere with a network connection.
This is showcased by a specific development of the project: interfacing over a Twitch live-stream.
Throughout development this project has been made as from-scratch as possible.
This has included designing of circuitry, PCBs, and 3D printed parts, as well as significant programming for drivers, communication, and interaction.
#+end_abstract

* DONE Introduction
#+begin_comment
No description was provided so I'm winging it

Abstract but longer:
- What is the bot?
  - Why did we make it?
  - What have we done?
- Was this project a success?
#+end_comment

Built as a semester project for CS 370, Colorado State University's Operating Systems Course, /Boo-Bot/ is a robot: small, self-contained, remote-controlled, high-quality, and designed from the ground up.
It is made to answer the lack of a cheap, commercially available, semi-autonomous, long-distance, highly-portable IOT device for animate telecommunication.
Despite the numerous challenges encountered during development, the final product is considered a successful implementation, providing significant learning experiences for the authors.
In design and construction, the device provided key insights into areas of robotics, circuitry, and of course, operating systems.
This paper provides an overview on why this project exists, the process of its design, and how that design was implemented.

There are two main areas of development in this project: hardware and software.
The first area, hardware, took the most time.
Between custom designing a PCB to drive several peripherals, and designing and 3D printing the chassis, a diverse set of skills were required.
The second area, software, was not without its developments.
With components including GPIO interfacing, IRC communication, video streaming, and operating system interfacing, a healthy mix of written-from-scratch software, libraries, and complete pre-existing software was employed.
Adding that all the software written requires non-trivial cross-compilation, several learning opportunities presented themselves.

* DONE Problem Characterization
#+begin_comment
This is a technical description of the problem. Your audience is
your peers so present it in a way that they can appreciate.
#+end_comment

The need for this project was born from a simple desire to experience a remote place.
While photos and videos provide a good approximation, they lack integration.
Virtual reality, while a great solution, is prohibitively expensive and lacks any sort of real-time factor.
The solution, of course, is a remote controlled robot.
However, long-distance remote controlled robots are few and far between in commercial spaces and often unable to provide a reasonable price tag.
Designing and implementing this robot in-house is the clear solution.

With the end-goal in mind, specific objectives and constraints were then drafted.
After careful consideration, we decided on the following set of items:
- Low cost: The target was $150 for a prototype unit.
- Small size: To ensure portability, low power consumption, and a more satisfying end product.
- Cleanliness: We wanted this to be done right. This required a custom PCB to improve cable management.
- Many peripherals: With a slew of sensors, motors, and other devices planned, this required a competent development board.
- High quality software: This decision lead us to the Rust programming language.
- Potential for future work: Required significant focus on easily installing and upgrading parts down the line when more development occurs.
- Low work duplication: Not wanting to completely re-invent the wheel, we wanted to use a popular ecosystem with plenty of community development.

With the problem described and a list of goals outlined, specific design decisions could be made.
These will be discussed in further sections of this paper.

* TODO Proposed Solution and Implementation Strategy
#+begin_comment
Include i. Methodology and ii. a description of the libraries that you have used and what you did on your own.
#+end_comment
** TODO Methodology
** TODO Software
** TODO Hardware
* TODO Conclusions
* DONE Bibliography                                                  :ignore:
# cite generates its own (correct) references heading, hence the :ignore:
bibliographystyle:IEEEtranS
bibliography:references.bib
